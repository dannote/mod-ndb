#include "mod_ndb.h"

COMPILER NSQL

cmd_parms *cmd;
config::dir *dir;
char *idxname;
char *idxtype;
char * copy_token() {
  return coco_string_create_char(t->val);
}

void index_col(char *name) {
  const char *err = named_idx(idxtype, cmd, dir, idxname, name);
  log_debug(cmd->server,"SQL index rec (%s,%s,%s)", idxtype, idxname, name);
  if(err) SemErr(err);
}
  
IGNORECASE
CHARACTERS
  char = 'a'..'z' + 'A'..'Z' + "0123456789!@#$%^_-".

TOKENS 
  DBName = char { char } CONTEXT(".").
  Name = char { char }.
  
COMMENTS FROM "/*" TO "*/"
IGNORE '\n' + '\r' + '\t' 

PRODUCTIONS
  NSQL = SelectClause FromClause WhereClause ";" .
  SelectClause = "SELECT" Column { "," Column } .
  FromClause = "FROM" TableSpec  .
  WhereClause = "SCAN"  ScanSpec  | "WHERE" IndexSpec .

  Column = Name                (. *dir->visible->new_item() = copy_token(); .) .

  TableSpec = 
    [ DBName                               (. dir->database = copy_token(); .)
     "." ] Name                               (. dir->table = copy_token(); .) .
  
  ScanSpec =                                   (. dir->flag.table_scan = 1; .)
    "TABLE" | "ordered" "index" ( Name | "primary" )
                    (. config::index *index_rec = dir->indexes->new_item(); .)
                    (. bzero(index_rec, dir->indexes->elt_size);  .)
                    (. index_rec->name = copy_token(); .)
                    (. index_rec->type = 'O';  .) .

  IndexSpec                                 
    = ( "primary" "key"        (. idxtype = "P"; idxname = "*Primary$Key*"; .)
      | "unique" "index" Name  (. idxtype = "U"; idxname = copy_token();    .)
    ) "=" VarList 
   |  "ordered" "index" ( Name | "primary" ) 
                               (.  idxtype = "O"; idxname = copy_token();   .)
    "=" VarList [ "ORDER" OrderOp ].

  OrderOp = "ASC"                                   (.  index_col("[ASC]"); .)
   | "DESC"                                         (. index_col("[DESC]"); .) .
  
  VarList = Var { "," Var } .
  Var = Name                                    (. index_col(copy_token()); .) .
  
END NSQL .