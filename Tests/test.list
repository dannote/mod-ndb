# test.list 
# 
# This set of tests as a whole should be idempotent: able to run repeatedly
# and get the same results each time.  Any group of tests with the 
# same 3- or 4- character prefix name should also be idempotent, 
# e.g. "typ" or "typ2".

# Format of test lines (tests are run against mod_ndb using curl):
#     test-name sed-filter url-path curl-args
# 
# Format of SQL lines, e.g. CREATE TABLE statements, run in mysql client:
#     test-name "SQL" query-file-name 


# ------ Prepare the database
sql000 SQL test_connection.sql
aaa000 SQL Create_tables.sql

# ------ Data type tests ------
# typ1: the most common data types (int, unsigned, smallint, char, varchar)
typ101 f1 typ1  # sorted on "channel"

# typ2 -- ints: tiny/small/medium signed & unsigned 
typ201 f1 typ2?i=1
typ202 f1 typ2?i=2
typ203 f1 typ2?i=3
typ204 f1 typ2?i=4
typ205 f1 typ2?i=5
typ206 f1 typ2 -d 'i=6&t=-30&ut=30&s=-300&us=300&m=-300000&um=350000'  # all valid
typ207 f1 typ2?i=5 -d 't=-900&ut=-900&s=-900&us=-900&m=-900&um=-900'  # no change
typ208 f1 typ2?i=6
typ209 f1 typ2?i=5
typ210 f1 typ2?i=6 -X DELETE

# typ3 -- decimals 
typ301 f1 typ3?i=1
typ302 f1 typ3?i=2
typ303 f1 typ3 -d 'i=3&d1=1.25&d2=2.375&d3=3.5&d4=4.9865' 
typ304 f1 typ3?i=3 
typ305 f1 typ3?i=3 -X DELETE

# typ4 -- times & dates
typ401 f1 typ4?i=1 

# typ5: ( i int primary key auto_inc, c int unsigned, unique index c_idx)
typ501 f1 typ5?i=1&c=1          # 404 -- start with empty table
typ502 f1 typ5 -d 'i=1&c=1'     # 204 -- insert a tuple
typ503 f1 typ5?i=1&c=1          # 200 -- get (1,1)
typ504 f1 typ5?i=1 -d c=@++     # 204 -- c=c+1 
typ505 f1 typ5?i=1&c=1          # 200 -- get (1,2)
typ506 f1 typ5?i=1 -X DELETE    # 204 -- delete the row.  empty again.

# insert two rows with auto_increment keys, then delete them
typ511 f1 typ5 -d i=@autoinc -d c=33       # OK 
typ512 f1 typ5 -d i=@autoinc -d c=49       # OK
typ513 f1 typ5 -d i=@autoinc -d c=33       # 409 Conflict
typ514 f1 typ5_ls                          # Two rows
typ515 f1 typ5_del?c=33 -X DELETE
typ516 f1 typ5_del?c=49 -X DELETE
typ517 f1 typ5_ls                          # Empty table again.

# longvarchar stress test
typ700 SQL typ7.sql
typ701 f1 typ7in -d "id=1" -d "vc01=ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" -d "ts=@time"
typ702 f1 typ7in -d "id=2" -d "vc01=B..BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAA" -d "ts=@time"
typ703 f1 typ7in -d "id=3" -d "vc01=C..BAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAA" -d "ts=@time"
typ704 f1 typ7 
# "--------- Sesssion" tests
#
ses000 SQL ses.sql
#
# change a row, change it back; create a row, delete it
#
ses001 f1 ses_list       # should return 5 rows 
ses002 f1 ses?id=3&var=last_page_visited -d sess_var_value=maps.php   # UPDATE
ses003 f1 sesx/3         # "/3" is pathinfo. Return 3 rows in XML format.
ses004 f1 ses -d sess_id=4 -d sess_var_name=user_name -d sess_var_value=roger
ses005 f1 ses_list       # will see the row that was inserted in ses004
ses006 f1 ses?id=4&var=user_name -X DELETE
ses007 f1 ses?id=3&var=last_page_visited -d sess_var_value=index.php 
ses008 f1 ses_list       # Same results as ses001
s
# Dump output formats
out001 f1 format?JSON
out002 f1 format?XML
out003 f1 format?raw
out004 f1 format?HTML

# custom error documents
err404 f1 typ5?i=1&c=1    # test 501  (table is empty)
#err405
#err409
#err500

